; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--cpp --list --debug -c --asm --interleave -o.\spifi\progline.o --asm_dir=.\ --list_dir=.\ --depend=.\spifi\progline.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I. -Iinc -I..\libpixy_m4\inc -I..\..\common\inc -I..\common\inc -I.\RTE\_Flash -IC:\Users\Stijn\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\Stijn\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\Device\ARM\ARMCM4\Include -D__UVISION_VERSION=534 -D_RTE_ -DARMCM4_FP -D_RTE_ -DCORE_M4 -DIPC_MASTER -DPIXY -DKEIL --omf_browse=.\spifi\progline.crf src\progline.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _ZN8ProgLine7setViewEt PROC ; ProgLine::setView(unsigned short)
;;;77     
;;;78     int ProgLine::setView(uint16_t index)
000000  b2c8              UXTB     r0,r1
;;;79     {
;;;80     	return line_setRenderMode(index);
000002  f7ffbffe          B.W      _Z18line_setRenderModeh ; line_setRenderMode(unsigned char)
;;;81     }
;;;82     
                          ENDP

                  _ZN8ProgLineC2Eh                  ; Alternate entry point ; ProgLine::ProgLine__sub_object(unsigned char)
                  _ZN8ProgLineC1Eh PROC ; ProgLine::ProgLine(unsigned char)
;;;39     
;;;40     ProgLine::ProgLine(uint8_t progIndex)
;;;41     {
;;;42     	cam_setMode(CAM_MODE1);	
;;;43     	line_open(progIndex);
;;;44     	// setup qqueue and M0
;;;45     	exec_runM0(2);
;;;46     	
;;;47     	// if view is valid, set it (default view is set in line_open
;;;48     	if (m_view>=0)
;;;49     		setView(m_view);	
;;;50     	
;;;51     }
;;;52     
000006  b538              PUSH     {r3-r5,lr}
000008  4604              MOV      r4,r0
00000a  460d              MOV      r5,r1
00000c  4a7f              LDR      r2,|L1.524|
00000e  6022              STR      r2,[r4,#0]
000010  2001              MOVS     r0,#1
000012  9000              STR      r0,[sp,#0]
000014  4668              MOV      r0,sp
000016  f7fffffe          BL       _Z11cam_setModeRKh ; cam_setMode(const unsigned char&)
00001a  b268              SXTB     r0,r5
00001c  f7fffffe          BL       _Z9line_opena ; line_open(signed char)
000020  2002              MOVS     r0,#2
000022  f7fffffe          BL       _Z10exec_runM0h ; exec_runM0(unsigned char)
000026  487a              LDR      r0,|L1.528|
000028  f9b01000          LDRSH    r1,[r0,#0]  ; _ZN4Prog6m_viewE
00002c  2900              CMP      r1,#0
00002e  db03              BLT      |L1.56|
000030  b289              UXTH     r1,r1
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       _ZN8ProgLine7setViewEt ; ProgLine::setView(unsigned short)
                  |L1.56|
000038  4620              MOV      r0,r4
00003a  bd38              POP      {r3-r5,pc}
                          ENDP

                  _Z14createProgLineh PROC ; createProgLine(unsigned char)
;;;30     
;;;31     REGISTER_PROG(ProgLine, PROG_NAME_LINE, "perform line tracking", PROG_LINE_MIN_TYPE, PROG_LINE_MAX_TYPE);
00003c  b510              PUSH     {r4,lr}
00003e  4604              MOV      r4,r0
000040  4974              LDR      r1,|L1.532|
000042  2004              MOVS     r0,#4
000044  f7fffffe          BL       _ZnwjRKSt9nothrow_t ; operator new(unsigned, const std::nothrow_t&)
000048  2800              CMP      r0,#0
00004a  d003              BEQ      |L1.84|
00004c  4621              MOV      r1,r4
00004e  e8bd4010          POP      {r4,lr}
000052  e7fe              B        _ZN8ProgLineC1Eh ; ProgLine::ProgLine(unsigned char)
                  |L1.84|
000054  bd10              POP      {r4,pc}
;;;32     
                          ENDP

                  _ZN8ProgLineD2Ev                  ; Alternate entry point ; ProgLine::~ProgLine__sub_object()
                  _ZN8ProgLineD1Ev PROC ; ProgLine::~ProgLine()
;;;52     
;;;53     ProgLine::~ProgLine()
;;;54     {
;;;55     	exec_stopM0();	
;;;56     	line_close();
;;;57     }
;;;58     	
000056  b510              PUSH     {r4,lr}
000058  4604              MOV      r4,r0
00005a  486c              LDR      r0,|L1.524|
00005c  6020              STR      r0,[r4,#0]
00005e  f7fffffe          BL       _Z11exec_stopM0v ; exec_stopM0()
000062  f7fffffe          BL       _Z10line_closev ; line_close()
000066  4620              MOV      r0,r4
000068  bd10              POP      {r4,pc}
                          ENDP

                  _ZN8ProgLineD0Ev PROC ; ProgLine::~ProgLine__deallocating()
00006a  b510              PUSH     {r4,lr}               ;0
00006c  f7fffffe          BL       _ZN8ProgLineD1Ev ; ProgLine::~ProgLine()
000070  e8bd4010          POP      {r4,lr}               ;0
000074  f7ffbffe          B.W      _ZdlPv ; operator delete (void*)
                          ENDP

                  _ZN8ProgLine4loopEPc PROC ; ProgLine::loop(char*)
;;;59     int ProgLine::loop(char *status)
000078  b510              PUSH     {r4,lr}
;;;60     {
;;;61     	line_process();
00007a  f7fffffe          BL       _Z12line_processv ; line_process()
;;;62     
;;;63     	return 0;
00007e  2000              MOVS     r0,#0
;;;64     }
000080  bd10              POP      {r4,pc}
;;;65     
                          ENDP

                  _ZN8ProgLine7getViewEtPPKc PROC ; ProgLine::getView(unsigned short, const char**)
;;;66     int ProgLine::getView(uint16_t index, const char **name)
000082  b510              PUSH     {r4,lr}
;;;67     {
000084  460c              MOV      r4,r1
;;;68     	uint16_t n = sizeof(m_views)/sizeof(char *);
;;;69     
;;;70     	if (index>=n)
000086  2c03              CMP      r4,#3
000088  d302              BCC      |L1.144|
;;;71     		return -1;
00008a  f04f30ff          MOV      r0,#0xffffffff
;;;72     
;;;73     	*name = m_views[index];
;;;74     
;;;75     	return index==line_getRenderMode(); // return 1 if it's the current view, 0 otherwise		
;;;76     }
00008e  bd10              POP      {r4,pc}
                  |L1.144|
000090  4861              LDR      r0,|L1.536|
000092  f8500024          LDR      r0,[r0,r4,LSL #2]     ;73
000096  6010              STR      r0,[r2,#0]            ;73
000098  f7fffffe          BL       _Z18line_getRenderModev ; line_getRenderMode()
00009c  42a0              CMP      r0,r4                 ;75
00009e  d101              BNE      |L1.164|
0000a0  2001              MOVS     r0,#1                 ;75
0000a2  bd10              POP      {r4,pc}
                  |L1.164|
0000a4  2000              MOVS     r0,#0                 ;75
0000a6  bd10              POP      {r4,pc}
;;;77     
                          ENDP

                  _ZN8ProgLine12sendLineDataEhhb PROC ; ProgLine::sendLineData(unsigned char, unsigned char, bool)
;;;157    
;;;158    void ProgLine::sendLineData(uint8_t requestType, uint8_t typeMap, bool checksum)
0000a8  b5f8              PUSH     {r3-r7,lr}
;;;159    {
0000aa  460c              MOV      r4,r1
0000ac  4616              MOV      r6,r2
0000ae  461d              MOV      r5,r3
;;;160    	uint8_t *txData;
;;;161    	uint32_t len;
;;;162    	int res;
;;;163    
;;;164    	len = ser_getTx(&txData);
0000b0  4668              MOV      r0,sp
0000b2  f7fffffe          BL       _Z9ser_getTxPPh ; ser_getTx(unsigned char**)
;;;165    	
;;;166    	if (requestType==GET_PRIMARY_FEATURES)
0000b6  b164              CBZ      r4,|L1.210|
;;;167    		res = line_getPrimaryFrame(typeMap, txData, len);
;;;168    	else //if (requestType==GET_ALL_FEATURES)
;;;169    		res = line_getAllFrame(typeMap, txData, len);
0000b8  b282              UXTH     r2,r0
0000ba  4630              MOV      r0,r6
0000bc  9900              LDR      r1,[sp,#0]
0000be  f7fffffe          BL       _Z16line_getAllFramehPht ; line_getAllFrame(unsigned char, unsigned char*, unsigned short)
                  |L1.194|
;;;170    	
;;;171    	if (res<0)
0000c2  2800              CMP      r0,#0
0000c4  da0b              BGE      |L1.222|
;;;172    		ser_sendError(SER_ERROR_BUSY, checksum);
0000c6  4629              MOV      r1,r5
0000c8  f06f0001          MVN      r0,#1
0000cc  f7fffffe          BL       _Z13ser_sendErrorab ; ser_sendError(signed char, bool)
;;;173    	else
;;;174    		ser_setTx(TYPE_RESPONSE_GET_FEATURES, res, checksum);
;;;175    }
0000d0  bdf8              POP      {r3-r7,pc}
                  |L1.210|
0000d2  b282              UXTH     r2,r0                 ;167
0000d4  4630              MOV      r0,r6                 ;167
0000d6  9900              LDR      r1,[sp,#0]            ;167
0000d8  f7fffffe          BL       _Z20line_getPrimaryFramehPht ; line_getPrimaryFrame(unsigned char, unsigned char*, unsigned short)
0000dc  e7f1              B        |L1.194|
                  |L1.222|
0000de  b2c1              UXTB     r1,r0                 ;174
0000e0  462a              MOV      r2,r5                 ;174
0000e2  2031              MOVS     r0,#0x31              ;174
0000e4  f7fffffe          BL       _Z9ser_setTxhhb ; ser_setTx(unsigned char, unsigned char, bool)
0000e8  bdf8              POP      {r3-r7,pc}
;;;176    
                          ENDP

                  _ZN8ProgLine6packetEhPKhhb PROC ; ProgLine::packet(unsigned char, const unsigned char*, unsigned char, bool)
;;;82     
;;;83     int ProgLine::packet(uint8_t type, const uint8_t *data, uint8_t len, bool checksum)
0000ea  b570              PUSH     {r4-r6,lr}
;;;84     {
0000ec  4605              MOV      r5,r0
0000ee  9c04              LDR      r4,[sp,#0x10]
;;;85     	int res=SER_ERROR_INVALID_REQUEST; 
0000f0  f06f0002          MVN      r0,#2
;;;86     	
;;;87     	if (type==TYPE_REQUEST_GET_FEATURES)
0000f4  2930              CMP      r1,#0x30
0000f6  d00b              BEQ      |L1.272|
;;;88     	{
;;;89     		if (len==2) // one byte in request
;;;90     			sendLineData(*(uint8_t *)data, *(uint8_t *)(data+1), checksum);
;;;91     		else
;;;92     			ser_sendError(SER_ERROR_INVALID_REQUEST, checksum);
;;;93     			
;;;94     		return 0;
;;;95     	}
;;;96     	else if (type==TYPE_REQUEST_SET_MODE)
0000f8  2936              CMP      r1,#0x36
0000fa  d018              BEQ      |L1.302|
;;;97     	{
;;;98     		if (len==1)
;;;99     			res = line_setMode(*(int8_t *)data);
;;;100    		if (res>=0)
;;;101    			ser_sendResult(res, checksum);
;;;102    		else
;;;103    			ser_sendError(res, checksum);
;;;104    		return 0;
;;;105    	}
;;;106    	else if (type==TYPE_REQUEST_SET_NEXT_TURN_ANGLE)
0000fc  293a              CMP      r1,#0x3a
0000fe  d028              BEQ      |L1.338|
;;;107    	{
;;;108    		if (len==2)
;;;109    			res = line_setNextTurnAngle(*(int16_t *)data);
;;;110    		if (res>=0)
;;;111    			ser_sendResult(res, checksum);
;;;112    		else
;;;113    			ser_sendError(res, checksum);
;;;114    		return 0;
;;;115    	}
;;;116    	else if (type==TYPE_REQUEST_SET_DEFAULT_TURN_ANGLE)
000100  293c              CMP      r1,#0x3c
000102  d038              BEQ      |L1.374|
;;;117    	{
;;;118    		if (len==2)
;;;119    			res = line_setDefaultTurnAngle(*(int16_t *)data);
;;;120    		if (res>=0)
;;;121    			ser_sendResult(res, checksum);
;;;122    		else
;;;123    			ser_sendError(res, checksum);
;;;124    		return 0;
;;;125    	}
;;;126    	else if (type==TYPE_REQUEST_SET_VECTOR)
000104  2938              CMP      r1,#0x38
000106  d048              BEQ      |L1.410|
;;;127    	{
;;;128    		if (len==1)
;;;129    			res = line_setVector(*(int8_t *)data);
;;;130    		if (res>=0)
;;;131    			ser_sendResult(res, checksum);
;;;132    		else
;;;133    			ser_sendError(res, checksum);		
;;;134    		return 0;
;;;135    	}
;;;136    	else if (type==TYPE_REQUEST_REVERSE_VECTOR)
000108  293e              CMP      r1,#0x3e
00010a  d057              BEQ      |L1.444|
;;;137    	{
;;;138    		if (len==0)
;;;139    			res = line_reversePrimary();
;;;140    		if (res>=0)
;;;141    			ser_sendResult(res, checksum);
;;;142    		else
;;;143    			ser_sendError(res, checksum);
;;;144    		return 0;
;;;145    	}		
;;;146    		
;;;147    	// nothing rings a bell, return error
;;;148    	return -1;
00010c  1080              ASRS     r0,r0,#2
;;;149    }
00010e  bd70              POP      {r4-r6,pc}
                  |L1.272|
000110  2b02              CMP      r3,#2                 ;89
000112  d004              BEQ      |L1.286|
000114  4621              MOV      r1,r4                 ;92
000116  f7fffffe          BL       _Z13ser_sendErrorab ; ser_sendError(signed char, bool)
                  |L1.282|
00011a  2000              MOVS     r0,#0                 ;94
00011c  bd70              POP      {r4-r6,pc}
                  |L1.286|
00011e  7850              LDRB     r0,[r2,#1]            ;90
000120  7811              LDRB     r1,[r2,#0]            ;90
000122  4602              MOV      r2,r0                 ;90
000124  4623              MOV      r3,r4                 ;90
000126  4628              MOV      r0,r5                 ;90
000128  f7fffffe          BL       _ZN8ProgLine12sendLineDataEhhb ; ProgLine::sendLineData(unsigned char, unsigned char, bool)
00012c  e7f5              B        |L1.282|
                  |L1.302|
00012e  2b01              CMP      r3,#1                 ;98
000130  d103              BNE      |L1.314|
000132  f9920000          LDRSB    r0,[r2,#0]            ;99
000136  f7fffffe          BL       _Z12line_setModea ; line_setMode(signed char)
                  |L1.314|
00013a  2800              CMP      r0,#0                 ;100
00013c  db03              BLT      |L1.326|
00013e  4621              MOV      r1,r4                 ;101
000140  f7fffffe          BL       _Z14ser_sendResultib ; ser_sendResult(int, bool)
000144  e003              B        |L1.334|
                  |L1.326|
000146  4621              MOV      r1,r4                 ;103
000148  b240              SXTB     r0,r0                 ;103
00014a  f7fffffe          BL       _Z13ser_sendErrorab ; ser_sendError(signed char, bool)
                  |L1.334|
00014e  2000              MOVS     r0,#0                 ;104
000150  bd70              POP      {r4-r6,pc}
                  |L1.338|
000152  2b02              CMP      r3,#2                 ;108
000154  d103              BNE      |L1.350|
000156  f9b20000          LDRSH    r0,[r2,#0]            ;109
00015a  f7fffffe          BL       _Z21line_setNextTurnAngles ; line_setNextTurnAngle(short)
                  |L1.350|
00015e  2800              CMP      r0,#0                 ;110
000160  db03              BLT      |L1.362|
000162  4621              MOV      r1,r4                 ;111
000164  f7fffffe          BL       _Z14ser_sendResultib ; ser_sendResult(int, bool)
000168  e003              B        |L1.370|
                  |L1.362|
00016a  4621              MOV      r1,r4                 ;113
00016c  b240              SXTB     r0,r0                 ;113
00016e  f7fffffe          BL       _Z13ser_sendErrorab ; ser_sendError(signed char, bool)
                  |L1.370|
000172  2000              MOVS     r0,#0                 ;114
000174  bd70              POP      {r4-r6,pc}
                  |L1.374|
000176  2b02              CMP      r3,#2                 ;118
000178  d103              BNE      |L1.386|
00017a  f9b20000          LDRSH    r0,[r2,#0]            ;119
00017e  f7fffffe          BL       _Z24line_setDefaultTurnAngles ; line_setDefaultTurnAngle(short)
                  |L1.386|
000182  2800              CMP      r0,#0                 ;120
000184  db03              BLT      |L1.398|
000186  4621              MOV      r1,r4                 ;121
000188  f7fffffe          BL       _Z14ser_sendResultib ; ser_sendResult(int, bool)
00018c  e003              B        |L1.406|
                  |L1.398|
00018e  4621              MOV      r1,r4                 ;123
000190  b240              SXTB     r0,r0                 ;123
000192  f7fffffe          BL       _Z13ser_sendErrorab ; ser_sendError(signed char, bool)
                  |L1.406|
000196  2000              MOVS     r0,#0                 ;124
000198  bd70              POP      {r4-r6,pc}
                  |L1.410|
00019a  2b01              CMP      r3,#1                 ;128
00019c  d102              BNE      |L1.420|
00019e  7810              LDRB     r0,[r2,#0]            ;129
0001a0  f7fffffe          BL       _Z14line_setVectorh ; line_setVector(unsigned char)
                  |L1.420|
0001a4  2800              CMP      r0,#0                 ;130
0001a6  db03              BLT      |L1.432|
0001a8  4621              MOV      r1,r4                 ;131
0001aa  f7fffffe          BL       _Z14ser_sendResultib ; ser_sendResult(int, bool)
0001ae  e003              B        |L1.440|
                  |L1.432|
0001b0  4621              MOV      r1,r4                 ;133
0001b2  b240              SXTB     r0,r0                 ;133
0001b4  f7fffffe          BL       _Z13ser_sendErrorab ; ser_sendError(signed char, bool)
                  |L1.440|
0001b8  2000              MOVS     r0,#0                 ;134
0001ba  bd70              POP      {r4-r6,pc}
                  |L1.444|
0001bc  b90b              CBNZ     r3,|L1.450|
0001be  f7fffffe          BL       _Z19line_reversePrimaryv ; line_reversePrimary()
                  |L1.450|
0001c2  2800              CMP      r0,#0                 ;140
0001c4  db03              BLT      |L1.462|
0001c6  4621              MOV      r1,r4                 ;141
0001c8  f7fffffe          BL       _Z14ser_sendResultib ; ser_sendResult(int, bool)
0001cc  e003              B        |L1.470|
                  |L1.462|
0001ce  4621              MOV      r1,r4                 ;143
0001d0  b240              SXTB     r0,r0                 ;143
0001d2  f7fffffe          BL       _Z13ser_sendErrorab ; ser_sendError(signed char, bool)
                  |L1.470|
0001d6  2000              MOVS     r0,#0                 ;144
0001d8  bd70              POP      {r4-r6,pc}
;;;150    
                          ENDP

                  _ZN8ProgLine13getResolutionEPtS0_h PROC ; ProgLine::getResolution(unsigned short*, unsigned short*, unsigned char)
;;;151    
;;;152    void ProgLine::getResolution(uint16_t *width, uint16_t *height, uint8_t type)
0001da  204f              MOVS     r0,#0x4f
;;;153    {
;;;154    	*width = LINE_GRID_WIDTH;
0001dc  8008              STRH     r0,[r1,#0]
;;;155    	*height = LINE_GRID_HEIGHT;
0001de  2034              MOVS     r0,#0x34
0001e0  8010              STRH     r0,[r2,#0]
;;;156    }
0001e2  4770              BX       lr
;;;157    
                          ENDP

                  __sti___12_progline_cpp_6df8bedf PROC
0001e4  b5f0              PUSH     {r4-r7,lr}            ;0
0001e6  2430              MOVS     r4,#0x30              ;0
0001e8  a20c              ADR      r2,|L1.540|
0001ea  a310              ADR      r3,|L1.556|
0001ec  253f              MOVS     r5,#0x3f              ;0
0001ee  f2af11b3          ADR      r1,_Z14createProgLineh + 1 ; createProgLine(unsigned char)
0001f2  4f14              LDR      r7,|L1.580|
0001f4  7838              LDRB     r0,[r7,#0]            ;0  ; _ZN13ProgTableUtil16m_progTableIndexE
0001f6  1c46              ADDS     r6,r0,#1              ;0
0001f8  703e              STRB     r6,[r7,#0]            ;0
0001fa  4e13              LDR      r6,|L1.584|
0001fc  eb061000          ADD      r0,r6,r0,LSL #4       ;0
000200  6002              STR      r2,[r0,#0]            ;0
000202  6043              STR      r3,[r0,#4]            ;0
000204  7204              STRB     r4,[r0,#8]            ;0
000206  7245              STRB     r5,[r0,#9]            ;0
000208  60c1              STR      r1,[r0,#0xc]          ;0
00020a  bdf0              POP      {r4-r7,pc}            ;0
                          ENDP

                  |L1.524|
                          DCD      _ZTV8ProgLine+0x8 ; vtable for ProgLine
                  |L1.528|
                          DCD      _ZN4Prog6m_viewE ; Prog::m_view
                  |L1.532|
                          DCD      _ZSt7nothrow ; std::nothrow
                  |L1.536|
                          DCD      ||.data||+0x4
                  |L1.540|
00021c  6c696e65          DCB      "line_tracking",0
000220  5f747261
000224  636b696e
000228  6700    
00022a  00                DCB      0
00022b  00                DCB      0
                  |L1.556|
00022c  70657266          DCB      "perform line tracking",0
000230  6f726d20
000234  6c696e65
000238  20747261
00023c  636b696e
000240  6700    
000242  00                DCB      0
000243  00                DCB      0
                  |L1.580|
                          DCD      _ZN13ProgTableUtil16m_progTableIndexE ; ProgTableUtil::m_progTableIndex
                  |L1.584|
                          DCD      _ZN13ProgTableUtil11m_progTableE ; ProgTableUtil::m_progTable

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||.text||
                          DCD      0x00000001

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  5072696d          DCB      "Primary features, no backgound",0
000004  61727920
000008  66656174
00000c  75726573
000010  2c206e6f
000014  20626163
000018  6b676f75
00001c  6e6400  
00001f  00                DCB      0
000020  5072696d          DCB      "Primary features",0
000024  61727920
000028  66656174
00002c  75726573
000030  00      
000031  00                DCB      0
000032  00                DCB      0
000033  00                DCB      0
000034  416c6c20          DCB      "All features",0
000038  66656174
00003c  75726573
000040  00      

                          AREA ||.data||, DATA, ALIGN=2

                  g_registerProgLine
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  _ZN8ProgLine7m_viewsE ; ProgLine::m_views
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x20
                          DCD      ||.conststring||+0x34

                          AREA ||.init_array||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000
                          RELOC 38, __sti___12_progline_cpp_6df8bedf

                          AREA ||.constdata__ZTV8ProgLine||, COMGROUP=_ZTV8ProgLine, DATA, READONLY, ALIGN=2

                  _ZTV8ProgLine ; vtable for ProgLine
                          DCD      0x00000000
                          DCD      _ZTI8ProgLine ; typeinfo for ProgLine
                          DCD      _ZN8ProgLineD1Ev ; ProgLine::~ProgLine()
                          DCD      _ZN8ProgLineD0Ev ; ProgLine::~ProgLine__deallocating()
                          DCD      _ZN8ProgLine4loopEPc ; ProgLine::loop(char*)
                          DCD      _ZN8ProgLine7getViewEtPPKc ; ProgLine::getView(unsigned short, const char**)
                          DCD      _ZN8ProgLine7setViewEt ; ProgLine::setView(unsigned short)
                          DCD      _ZN4Prog9getActionEtPPKcS2_ ; Prog::getAction(unsigned short, const char**, const char**)
                          DCD      _ZN8ProgLine13getResolutionEPtS0_h ; ProgLine::getResolution(unsigned short*, unsigned short*, unsigned char)
                          DCD      _ZN8ProgLine6packetEhPKhhb ; ProgLine::packet(unsigned char, const unsigned char*, unsigned char, bool)

                          AREA ||i._ZN4Prog9getActionEtPPKcS2_||, COMGROUP=_ZN4Prog9getActionEtPPKcS2_, CODE, READONLY, ALIGN=1

                  _ZN4Prog9getActionEtPPKcS2_ PROC ; Prog::getAction(unsigned short, const char**, const char**)
;;;65     	}
;;;66     	virtual int getAction(uint16_t index, const char **name, const char **scriptlet)
000000  f04f30ff          MOV      r0,#0xffffffff
;;;67     	{
;;;68     		return -1;
;;;69     	}
000004  4770              BX       lr
;;;70     	virtual void getResolution(uint16_t *width, uint16_t *height, uint8_t type)
                          ENDP


                          AREA ||area_number.23||, COMGROUP=_ZN4Prog9getActionEtPPKcS2_, LINKORDER=||i._ZN4Prog9getActionEtPPKcS2_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.23||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN4Prog9getActionEtPPKcS2_||
                          DCD      0x00000001

                          AREA ||.constdata__ZTI8ProgLine||, COMGROUP=_ZTI8ProgLine, DATA, READONLY, ALIGN=2

                  _ZTI8ProgLine ; typeinfo for ProgLine
                          DCD      _ZTVN10__cxxabiv120__si_class_type_infoE+0x8 ; vtable for __cxxabiv1::__si_class_type_info
                          DCD      _ZTS8ProgLine ; typeinfo name for ProgLine
                          DCD      _ZTI4Prog ; typeinfo for Prog

                          AREA ||.constdata__ZTI4Prog||, COMGROUP=_ZTI4Prog, DATA, READONLY, ALIGN=2

                  _ZTI4Prog ; typeinfo for Prog
                          DCD      _ZTVN10__cxxabiv117__class_type_infoE+0x8 ; vtable for __cxxabiv1::__class_type_info
                          DCD      _ZTS4Prog ; typeinfo name for Prog

                          AREA ||.constdata__ZTS8ProgLine||, COMGROUP=_ZTS8ProgLine, DATA, READONLY, ALIGN=0

                  _ZTS8ProgLine ; typeinfo name for ProgLine
000000  3850726f          DCB      0x38,0x50,0x72,0x6f
000004  674c696e          DCB      0x67,0x4c,0x69,0x6e
000008  6500              DCB      0x65,0x00

                          AREA ||.constdata__ZTS4Prog||, COMGROUP=_ZTS4Prog, DATA, READONLY, ALIGN=0

                  _ZTS4Prog ; typeinfo name for Prog
000000  3450726f          DCB      0x34,0x50,0x72,0x6f
000004  6700              DCB      0x67,0x00

;*** Start embedded assembler ***

#line 1 "src\\progline.cpp"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___12_progline_cpp_6df8bedf___Z7__REV16j|
#line 130 "..\\common\\inc\\core_cmInstr.h"
|__asm___12_progline_cpp_6df8bedf___Z7__REV16j| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___12_progline_cpp_6df8bedf___Z7__REVSHi|
#line 144
|__asm___12_progline_cpp_6df8bedf___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
