; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\power.o --asm_dir=.\ --list_dir=.\ --depend=.\power.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I. -I..\..\common\inc -I..\common\inc -Iinc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=534 -DCORE_M4 -DIPC_MASTER -DPIXY -DKEIL --omf_browse=.\power.crf src\power.cpp]
                          THUMB

                          AREA ||i._Z10pwr_getVinv||, CODE, READONLY, ALIGN=1

                  _Z10pwr_getVinv PROC ; pwr_getVin()
;;;55     
;;;56     uint32_t pwr_getVin()
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58      	uint32_t vin;
;;;59     	
;;;60     	vin = adc_get(VIN_ADCCHAN)*10560/1024 + 330;  // 10560 = 3.3*3.2*1000, 330 is diode drop 
000002  2003              MOVS     r0,#3
000004  f7fffffe          BL       adc_get
000008  f44f5125          MOV      r1,#0x2940
00000c  4348              MULS     r0,r1,r0
00000e  1149              ASRS     r1,r1,#5
000010  eb012090          ADD      r0,r1,r0,LSR #10
;;;61     	
;;;62     	return vin; 
;;;63     }
000014  bd10              POP      {r4,pc}
;;;64     
                          ENDP


                          AREA ||i._Z8pwr_initv||, CODE, READONLY, ALIGN=2

                  _Z8pwr_initv PROC ; pwr_init()
;;;92     
;;;93     void pwr_init()
000000  4803              LDR      r0,|L2.16|
;;;94     {
;;;95     #ifdef PIXY1
;;;96      	LPC_GPIO_PORT->DIR[5] |= 0x0100;	 
;;;97     
;;;98     	// choose USB power or vin
;;;99     	if (pwr_getVin()>6430) // 6430=5000+1100(ldo)+330(diode) 
;;;100     		LPC_GPIO_PORT->PIN[5] &= ~0x0100;
;;;101    	else // switch usb on
;;;102    		LPC_GPIO_PORT->PIN[5] |= 0x0100;
;;;103    #endif
;;;104    
;;;105       	g_chirpUsb->registerModule(g_module);
000002  4902              LDR      r1,|L2.12|
000004  6800              LDR      r0,[r0,#0]  ; g_chirpUsb
000006  f7ffbffe          B.W      _ZN5Chirp14registerModuleEPK10ProcModule ; Chirp::registerModule(const ProcModule*)
;;;106    }
;;;107    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      ||.constdata||
                  |L2.16|
                          DCD      g_chirpUsb

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z10pwr_getVinv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z10pwr_getVinv||
                          DCD      0x00000001

                          AREA ||area_number.4||, LINKORDER=||i._Z8pwr_initv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z8pwr_initv||
                          DCD      0x00000001

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  g_module
                          DCD      ||.conststring||
                          DCD      _Z10pwr_getVinv ; pwr_getVin()
000008  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000010  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      ||.conststring||+0xc
                          DCD      0x00000000
                          DCD      0x00000000
                          %        8
000028  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  7077725f          DCB      "pwr_getVin",0
000004  67657456
000008  696e00  
00000b  00                DCB      0
00000c  47657420          DCB      "Get Vin (JP1) voltage@r voltage in millivolts",0
000010  56696e20
000014  284a5031
000018  2920766f
00001c  6c746167
000020  65407220
000024  766f6c74
000028  61676520
00002c  696e206d
000030  696c6c69
000034  766f6c74
000038  7300    

;*** Start embedded assembler ***

#line 1 "src\\power.cpp"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_power_cpp_7fde69b7___Z7__REV16j|
#line 130 "..\\common\\inc\\core_cmInstr.h"
|__asm___9_power_cpp_7fde69b7___Z7__REV16j| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_power_cpp_7fde69b7___Z7__REVSHi|
#line 144
|__asm___9_power_cpp_7fde69b7___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
