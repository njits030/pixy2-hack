; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\fpu_init.o --asm_dir=.\ --list_dir=.\ --depend=.\fpu_init.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I. -I..\..\common\inc -I..\common\inc -Iinc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=534 -DCORE_M4 -DIPC_MASTER -DPIXY -DKEIL --omf_browse=.\fpu_init.crf src\fpu_init.c]
                          THUMB

                          AREA ||i.fpuInit||, CODE, READONLY, ALIGN=2

                  fpuInit PROC
;;;48     
;;;49     void fpuInit(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;50     {
;;;51     // from arm trm manual:
;;;52     //                ; CPACR is located at address 0xE000ED88
;;;53     //                LDR.W R0, =0xE000ED88
;;;54     //                ; Read CPACR
;;;55     //                LDR R1, [R0]
;;;56     //                ; Set bits 20-23 to enable CP10 and CP11 coprocessors
;;;57     //                ORR R1, R1, #(0xF << 20)
;;;58     //                ; Write back the modified value to the CPACR
;;;59     //                STR R1, [R0]
;;;60     
;;;61                     
;;;62         volatile uint32_t* regCpacr = (uint32_t*) LPC_CPACR;
000002  480f              LDR      r0,|L1.64|
;;;63         volatile uint32_t* regMvfr0 = (uint32_t*) SCB_MVFR0;
000004  490f              LDR      r1,|L1.68|
;;;64         volatile uint32_t* regMvfr1 = (uint32_t*) SCB_MVFR1;
000006  1d0a              ADDS     r2,r1,#4
;;;65         volatile uint32_t Cpacr;
;;;66         volatile uint32_t Mvfr0;
;;;67         volatile uint32_t Mvfr1;    
;;;68         char vfpPresent = 0;
;;;69     
;;;70         Mvfr0 = *regMvfr0;
000008  6809              LDR      r1,[r1,#0]
00000a  9101              STR      r1,[sp,#4]
;;;71         Mvfr1 = *regMvfr1;
00000c  6811              LDR      r1,[r2,#0]
00000e  9100              STR      r1,[sp,#0]
;;;72     
;;;73         vfpPresent = ((SCB_MVFR0_RESET == Mvfr0) && (SCB_MVFR1_RESET == Mvfr1));
000010  4a0d              LDR      r2,|L1.72|
000012  9901              LDR      r1,[sp,#4]
000014  4291              CMP      r1,r2
000016  d104              BNE      |L1.34|
000018  9900              LDR      r1,[sp,#0]
00001a  f1a15288          SUB      r2,r1,#0x11000000
00001e  3a11              SUBS     r2,r2,#0x11
000020  d00b              BEQ      |L1.58|
                  |L1.34|
000022  2100              MOVS     r1,#0
                  |L1.36|
;;;74         
;;;75         if(vfpPresent)
000024  2900              CMP      r1,#0
000026  d007              BEQ      |L1.56|
;;;76         {
;;;77             Cpacr = *regCpacr;
000028  6801              LDR      r1,[r0,#0]
00002a  9102              STR      r1,[sp,#8]
;;;78             Cpacr |= (0xF << 20);
00002c  9902              LDR      r1,[sp,#8]
00002e  f4410170          ORR      r1,r1,#0xf00000
000032  9102              STR      r1,[sp,#8]
;;;79             *regCpacr = Cpacr;   // enable CP10 and CP11 for full access
000034  9902              LDR      r1,[sp,#8]
000036  6001              STR      r1,[r0,#0]
                  |L1.56|
;;;80         }
;;;81     
;;;82     }
000038  bd0e              POP      {r1-r3,pc}
                  |L1.58|
00003a  2101              MOVS     r1,#1                 ;73
00003c  e7f2              B        |L1.36|
;;;83     
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      0xe000ed88
                  |L1.68|
                          DCD      0xe000ef40
                  |L1.72|
                          DCD      0x10110021
