; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--cpp --list --split_sections --debug -c --asm --interleave -o.\flash.o --asm_dir=.\ --list_dir=.\ --depend=.\flash.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O1 --diag_suppress=9931 -I. -I..\..\common\inc -I..\common\inc -Iinc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=534 -DCORE_M4 -DIPC_MASTER -DPIXY -DKEIL --omf_browse=.\flash.crf src\flash.cpp]
                          THUMB

                          AREA ||i._Z10flash_initv||, CODE, READONLY, ALIGN=2

                  _Z10flash_initv PROC ; flash_init()
;;;23     
;;;24     int32_t flash_init()
000000  b570              PUSH     {r4-r6,lr}
;;;25     {
;;;26     	uint32_t memSize;
;;;27     	
;;;28     	__disable_irq();
000002  b672              CPSID    i
;;;29     	/* Initialize LPCSPIFILIB library, reset the interface */
;;;30     	spifiInit(LPC_SPIFI_BASE, true);
000004  2101              MOVS     r1,#1
000006  4e15              LDR      r6,|L1.92|
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       spifiInit
;;;31     
;;;32     	/* register support for the family(s) we may want to work with
;;;33     	     (only 1 is required) */
;;;34     	spifiRegisterFamily(SPIFI_REG_FAMILY_SpansionS25FL1);
00000e  4814              LDR      r0,|L1.96|
000010  f7fffffe          BL       spifiRegisterFamily
;;;35     	
;;;36     	/* Get required memory for detected device, this may vary per device family */
;;;37     	memSize = spifiGetHandleMemSize(LPC_SPIFI_BASE);
000014  4630              MOV      r0,r6
000016  f7fffffe          BL       spifiGetHandleMemSize
00001a  4604              MOV      r4,r0
;;;38     	if (memSize==0)
00001c  b1c4              CBZ      r4,|L1.80|
;;;39     		return -1;
;;;40     	g_tempFlashmem = new uint32_t[memSize/sizeof(uint32_t)];
00001e  f0240003          BIC      r0,r4,#3
000022  f7fffffe          BL       _Znaj ; operator new[] (unsigned)
000026  4d0f              LDR      r5,|L1.100|
000028  60a8              STR      r0,[r5,#8]  ; g_tempFlashmem
;;;41     
;;;42     	/* Initialize and detect a device and get device context */
;;;43     	g_spifi = spifiInitDevice(g_tempFlashmem, memSize, LPC_SPIFI_BASE, FLASH_BEGIN);
00002a  f04f53a0          MOV      r3,#0x14000000
00002e  4632              MOV      r2,r6
000030  4621              MOV      r1,r4
000032  f7fffffe          BL       spifiInitDevice
000036  6028              STR      r0,[r5,#0]  ; g_spifi
;;;44     	if (g_spifi==NULL)
000038  b168              CBZ      r0,|L1.86|
;;;45     		return -2;
;;;46     
;;;47     	g_flashSize = spifiDevGetInfo(g_spifi, SPIFI_INFO_DEVSIZE);
00003a  2101              MOVS     r1,#1
00003c  f7fffffe          BL       spifiDevGetInfo
000040  6068              STR      r0,[r5,#4]  ; g_flashSize
;;;48     
;;;49     	spifiDevSetMemMode(g_spifi, true);
000042  2101              MOVS     r1,#1
000044  6828              LDR      r0,[r5,#0]  ; g_spifi
000046  f7fffffe          BL       spifiDevSetMemMode
;;;50     	__enable_irq();
00004a  b662              CPSIE    i
;;;51     
;;;52     	return 0;
00004c  2000              MOVS     r0,#0
;;;53     }
00004e  bd70              POP      {r4-r6,pc}
                  |L1.80|
000050  f04f30ff          MOV      r0,#0xffffffff        ;39
000054  bd70              POP      {r4-r6,pc}
                  |L1.86|
000056  f06f0001          MVN      r0,#1                 ;45
00005a  bd70              POP      {r4-r6,pc}
;;;54     
                          ENDP

                  |L1.92|
                          DCD      0x40003000
                  |L1.96|
                          DCD      spifi_REG_FAMILY_CommonCommandSet
                  |L1.100|
                          DCD      ||.data||

                          AREA ||i._Z11flash_erasejj||, CODE, READONLY, ALIGN=2

                  _Z11flash_erasejj PROC ; flash_erase(unsigned, unsigned)
;;;54     
;;;55     int32_t flash_erase(uint32_t addr, uint32_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;56     {
000004  4606              MOV      r6,r0
000006  4688              MOV      r8,r1
;;;57     	SPIFI_ERR_T res=SPIFI_ERR_NONE;
000008  2500              MOVS     r5,#0
;;;58     	uint32_t a; 
;;;59     
;;;60     	printf("flash erase %x %x\n", addr, len);
00000a  4642              MOV      r2,r8
00000c  4631              MOV      r1,r6
00000e  a010              ADR      r0,|L2.80|
000010  f7fffffe          BL       lpc_printf
;;;61     	__disable_irq();
000014  b672              CPSID    i
;;;62     	for (a=FLASH_SECTOR_MASK(addr); a<addr+len; a+=FLASH_SECTOR_SIZE)
000016  0b34              LSRS     r4,r6,#12
000018  0324              LSLS     r4,r4,#12
;;;63     	{
;;;64     		res = spifiDevEraseSubBlock(g_spifi, spifiGetSubBlockFromAddr(g_spifi, a));
00001a  4f12              LDR      r7,|L2.100|
00001c  4446              ADD      r6,r6,r8              ;62
00001e  e00d              B        |L2.60|
                  |L2.32|
000020  683d              LDR      r5,[r7,#0]  ; g_spifi
000022  4621              MOV      r1,r4
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       spifiGetSubBlockFromAddr
00002a  4601              MOV      r1,r0
00002c  6828              LDR      r0,[r5,#0]
00002e  68c2              LDR      r2,[r0,#0xc]
000030  4628              MOV      r0,r5
000032  4790              BLX      r2
000034  4605              MOV      r5,r0
;;;65     		if (res!=SPIFI_ERR_NONE)
000036  b91d              CBNZ     r5,|L2.64|
000038  f5045480          ADD      r4,r4,#0x1000         ;62
                  |L2.60|
00003c  42a6              CMP      r6,r4                 ;62
00003e  d8ef              BHI      |L2.32|
                  |L2.64|
;;;66     			goto end;
;;;67     	}
;;;68     end:
;;;69     	spifiDevSetMemMode(g_spifi, true);
000040  2101              MOVS     r1,#1
000042  6838              LDR      r0,[r7,#0]  ; g_spifi
000044  f7fffffe          BL       spifiDevSetMemMode
;;;70     	__enable_irq();
000048  b662              CPSIE    i
;;;71     	return -res;
00004a  4268              RSBS     r0,r5,#0
;;;72     }
00004c  e8bd81f0          POP      {r4-r8,pc}
;;;73     
                          ENDP

                  |L2.80|
000050  666c6173          DCB      "flash erase %x %x\n",0
000054  68206572
000058  61736520
00005c  25782025
000060  780a00  
000063  00                DCB      0
                  |L2.100|
                          DCD      ||.data||

                          AREA ||i._Z13flash_programjPKhj||, CODE, READONLY, ALIGN=2

                  _Z13flash_programjPKhj PROC ; flash_program(unsigned, const unsigned char*, unsigned)
;;;73     
;;;74     int32_t flash_program(uint32_t addr, const uint8_t *data, uint32_t len)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;75     {
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4691              MOV      r9,r2
;;;76     	SPIFI_ERR_T res;
;;;77     	uint32_t ac, lc;
;;;78     
;;;79     	printf("flash program %x %x\n", addr, len);
00000a  464a              MOV      r2,r9
00000c  4639              MOV      r1,r7
00000e  a015              ADR      r0,|L3.100|
000010  f7fffffe          BL       lpc_printf
;;;80     	__disable_irq();	
000014  b672              CPSID    i
;;;81     	ac = addr&(FLASH_PAGE_SIZE-1);
000016  b2f8              UXTB     r0,r7
;;;82     	if (ac)
;;;83     	{
;;;84     		lc = FLASH_PAGE_SIZE-ac;
;;;85     		res = spifiProgram(g_spifi, addr, (uint32_t *)data, lc);
000018  4e18              LDR      r6,|L3.124|
00001a  b198              CBZ      r0,|L3.68|
00001c  f5c07580          RSB      r5,r0,#0x100          ;84
000020  462b              MOV      r3,r5
000022  4642              MOV      r2,r8
000024  4639              MOV      r1,r7
000026  6830              LDR      r0,[r6,#0]  ; g_spifi
000028  f7fffffe          BL       spifiProgram
00002c  4604              MOV      r4,r0
;;;86     		if (res!=SPIFI_ERR_NONE)
00002e  b984              CBNZ     r4,|L3.82|
;;;87     			goto end;
;;;88     		res = spifiProgram(g_spifi, addr+lc, (uint32_t *)(data+lc), len-lc);
000030  eba90305          SUB      r3,r9,r5
000034  eb080205          ADD      r2,r8,r5
000038  1979              ADDS     r1,r7,r5
00003a  6830              LDR      r0,[r6,#0]  ; g_spifi
00003c  f7fffffe          BL       spifiProgram
000040  4604              MOV      r4,r0
;;;89     		if (res!=SPIFI_ERR_NONE)
000042  e006              B        |L3.82|
                  |L3.68|
;;;90     			goto end;
;;;91     	}
;;;92     	else 
;;;93     		res = spifiProgram(g_spifi, addr, (uint32_t *)data, len);
000044  464b              MOV      r3,r9
000046  4642              MOV      r2,r8
000048  4639              MOV      r1,r7
00004a  6830              LDR      r0,[r6,#0]  ; g_spifi
00004c  f7fffffe          BL       spifiProgram
000050  4604              MOV      r4,r0
                  |L3.82|
;;;94     
;;;95     	end:
;;;96     	spifiDevSetMemMode(g_spifi, true);
000052  2101              MOVS     r1,#1
000054  6830              LDR      r0,[r6,#0]  ; g_spifi
000056  f7fffffe          BL       spifiDevSetMemMode
;;;97     	__enable_irq();
00005a  b662              CPSIE    i
;;;98     	return -res;
00005c  4260              RSBS     r0,r4,#0
;;;99     
;;;100    }
00005e  e8bd87f0          POP      {r4-r10,pc}
                          ENDP

000062  0000              DCW      0x0000
                  |L3.100|
000064  666c6173          DCB      "flash program %x %x\n",0
000068  68207072
00006c  6f677261
000070  6d202578
000074  2025780a
000078  00      
000079  00                DCB      0
00007a  00                DCB      0
00007b  00                DCB      0
                  |L3.124|
                          DCD      ||.data||

                          AREA ||.ARM.exidx||, LINKORDER=||i._Z10flash_initv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          DCD      0x00000000
                          RELOC 42, ||i._Z10flash_initv||
                          DCD      0x00000001

                          AREA ||area_number.5||, LINKORDER=||i._Z11flash_erasejj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z11flash_erasejj||
                          DCD      0x00000001

                          AREA ||area_number.6||, LINKORDER=||i._Z13flash_programjPKhj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z13flash_programjPKhj||
                          DCD      0x00000001

                          AREA ||.data||, DATA, ALIGN=2

                  g_spifi
                          DCD      0x00000000
                  g_flashSize
                          DCD      0x00000000
                  g_tempFlashmem
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "src\\flash.cpp"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_flash_cpp_g_spifi___Z7__REV16j|
#line 130 "..\\common\\inc\\core_cmInstr.h"
|__asm___9_flash_cpp_g_spifi___Z7__REV16j| PROC
#line 131

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_flash_cpp_g_spifi___Z7__REVSHi|
#line 144
|__asm___9_flash_cpp_g_spifi___Z7__REVSHi| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
