; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\m0\equeue.o --asm_dir=.\ --list_dir=.\ --depend=.\m0\equeue.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\libpixy_m0\inc -I.\inc -I..\..\common\inc -I..\common\inc -Iinc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=534 -DCORE_M0 -DIPC_SLAVE -DPIXY -DKEIL --omf_browse=.\m0\equeue.crf src\equeue.c]
                          THUMB

                          AREA ||i.eq_enqueue||, CODE, READONLY, ALIGN=2

                  eq_enqueue PROC
;;;20     
;;;21     uint32_t eq_enqueue(uint16_t val)
000000  b500              PUSH     {lr}
;;;22     {
000002  4603              MOV      r3,r0
;;;23         if (eq_free()>0)
000004  f7fffffe          BL       eq_free
000008  2800              CMP      r0,#0
00000a  dd1e              BLE      |L1.74|
;;;24         {
;;;25             //if(val > 100) val == 255;
;;;26             //else val == 1;
;;;27             g_equeue->data[g_equeue->writeIndex++] = val;
00000c  4910              LDR      r1,|L1.80|
00000e  6809              LDR      r1,[r1,#0]  ; g_equeue
000010  8848              LDRH     r0,[r1,#2]
000012  1c41              ADDS     r1,r0,#1
000014  4a0e              LDR      r2,|L1.80|
000016  6812              LDR      r2,[r2,#0]  ; g_equeue
000018  8051              STRH     r1,[r2,#2]
00001a  0042              LSLS     r2,r0,#1
00001c  490c              LDR      r1,|L1.80|
00001e  6809              LDR      r1,[r1,#0]  ; g_equeue
000020  3108              ADDS     r1,r1,#8
000022  528b              STRH     r3,[r1,r2]
;;;28             g_equeue->produced++;
000024  480a              LDR      r0,|L1.80|
000026  6800              LDR      r0,[r0,#0]  ; g_equeue
000028  8880              LDRH     r0,[r0,#4]
00002a  1c40              ADDS     r0,r0,#1
00002c  4908              LDR      r1,|L1.80|
00002e  6809              LDR      r1,[r1,#0]  ; g_equeue
000030  8088              STRH     r0,[r1,#4]
;;;29     		if (g_equeue->writeIndex==EQ_MEM_SIZE)
000032  4807              LDR      r0,|L1.80|
000034  6800              LDR      r0,[r0,#0]  ; g_equeue
000036  8840              LDRH     r0,[r0,#2]
000038  4906              LDR      r1,|L1.84|
00003a  4288              CMP      r0,r1
00003c  d103              BNE      |L1.70|
;;;30     			g_equeue->writeIndex = 0;
00003e  2000              MOVS     r0,#0
000040  4903              LDR      r1,|L1.80|
000042  6809              LDR      r1,[r1,#0]  ; g_equeue
000044  8048              STRH     r0,[r1,#2]
                  |L1.70|
;;;31             return 1;
000046  2001              MOVS     r0,#1
                  |L1.72|
;;;32         }
;;;33         return 0;
;;;34     }
000048  bd00              POP      {pc}
                  |L1.74|
00004a  2000              MOVS     r0,#0                 ;33
00004c  e7fc              B        |L1.72|
;;;35     
                          ENDP

00004e  0000              DCW      0x0000
                  |L1.80|
                          DCD      g_equeue
                  |L1.84|
                          DCD      0x00001dfc

                          AREA ||i.eq_free||, CODE, READONLY, ALIGN=2

                  eq_free PROC
;;;35     
;;;36     uint16_t eq_free(void)
000000  4805              LDR      r0,|L2.24|
;;;37     {
;;;38         uint16_t len = g_equeue->produced - g_equeue->consumed;
000002  6800              LDR      r0,[r0,#0]  ; g_equeue
000004  8880              LDRH     r0,[r0,#4]
000006  4a04              LDR      r2,|L2.24|
000008  6812              LDR      r2,[r2,#0]  ; g_equeue
00000a  88d2              LDRH     r2,[r2,#6]
00000c  1a80              SUBS     r0,r0,r2
00000e  b281              UXTH     r1,r0
;;;39     	return EQ_MEM_SIZE-len;
000010  4802              LDR      r0,|L2.28|
000012  1a40              SUBS     r0,r0,r1
000014  b280              UXTH     r0,r0
;;;40     } 
000016  4770              BX       lr
                          ENDP

                  |L2.24|
                          DCD      g_equeue
                  |L2.28|
                          DCD      0x00001dfc

                          AREA ||.data||, DATA, ALIGN=2

                  g_equeue
                          DCD      0x2000c000
